package com.ethan.web.webmvc.dao;

import java.io.Serializable;

import javax.persistence.*;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

@Entity
@ApiModel
@Table(name="test")
public class TestEntity implements Serializable {

    /**
     * generated by addFieldComment 1
     * 
     */
    @Id   // 添加一个空的id标识，因为jpa在映射实体是需要一个id，这个必须
    @Column(name="user")
    @ApiModelProperty(value="")
    private String user;

    /**
     * generated by addFieldComment 1
     * 
     */
    @Column(name="account")
    @ApiModelProperty(value="")
    private String account;

    /**
     * generated by addFieldComment 1
     * 
     */
    @Column(name="age")
    @ApiModelProperty(value="")
    private Integer age;

    /**
     * generated by addFieldComment 1
     * 
     */
    @Column(name="passworld")
    @ApiModelProperty(value="")
    private String passworld;

    /**
     * generated by addFieldComment 1
     * 
     */
    @Column(name="type")
    @ApiModelProperty(value="")
    private String type;

    /**
     * generated by addFieldComment 2
     * test
     */
    private static final long serialVersionUID = 1L;

    public String getUser() {
        return user;
    }

    public void setUser(String user) {
        this.user = user;
    }

    public String getAccount() {
        return account;
    }

    public void setAccount(String account) {
        this.account = account;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    public String getPassworld() {
        return passworld;
    }

    public void setPassworld(String passworld) {
        this.passworld = passworld;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", user=").append(user);
        sb.append(", account=").append(account);
        sb.append(", age=").append(age);
        sb.append(", passworld=").append(passworld);
        sb.append(", type=").append(type);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        TestEntity other = (TestEntity) that;
        return (this.getUser() == null ? other.getUser() == null : this.getUser().equals(other.getUser()))
            && (this.getAccount() == null ? other.getAccount() == null : this.getAccount().equals(other.getAccount()))
            && (this.getAge() == null ? other.getAge() == null : this.getAge().equals(other.getAge()))
            && (this.getPassworld() == null ? other.getPassworld() == null : this.getPassworld().equals(other.getPassworld()))
            && (this.getType() == null ? other.getType() == null : this.getType().equals(other.getType()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getUser() == null) ? 0 : getUser().hashCode());
        result = prime * result + ((getAccount() == null) ? 0 : getAccount().hashCode());
        result = prime * result + ((getAge() == null) ? 0 : getAge().hashCode());
        result = prime * result + ((getPassworld() == null) ? 0 : getPassworld().hashCode());
        result = prime * result + ((getType() == null) ? 0 : getType().hashCode());
        return result;
    }
}