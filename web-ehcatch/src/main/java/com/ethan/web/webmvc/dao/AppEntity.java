package com.ethan.web.webmvc.dao;

import java.io.Serializable;

import javax.persistence.*;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

@Entity
@ApiModel
@Table(name="tab_app")
public class AppEntity implements Serializable {
    /**
     * generated by addFieldComment 1
     * 
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="id")
    @ApiModelProperty(value="")
    private Integer id;

    /**
     * generated by addFieldComment 1
     * 机构名称
     */
    @Column(name="app_name")
    @ApiModelProperty(value="机构名称")
    private String appName;

    /**
     * generated by addFieldComment 1
     * 应用id
     */
    @Column(name="app_id")
    @ApiModelProperty(value="应用id")
    private String appId;

    /**
     * generated by addFieldComment 1
     *  应用密钥  （可更改）
     */
    @Column(name="app_secret")
    @ApiModelProperty(value=" 应用密钥  （可更改）")
    private String appSecret;

    /**
     * generated by addFieldComment 1
     * 是否可用 （是否对某个机构开放）
     */
    @Column(name="is_flag")
    @ApiModelProperty(value="是否可用 （是否对某个机构开放）")
    private String isFlag;

    /**
     * generated by addFieldComment 1
     * 上一次access_token
     */
    @Column(name="access_token")
    @ApiModelProperty(value="上一次access_token")
    private String accessToken;

    /**
     * generated by addFieldComment 2
     * tab_app
     */
    private static final long serialVersionUID = 1L;

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getAppName() {
        return appName;
    }

    public void setAppName(String appName) {
        this.appName = appName;
    }

    public String getAppId() {
        return appId;
    }

    public void setAppId(String appId) {
        this.appId = appId;
    }

    public String getAppSecret() {
        return appSecret;
    }

    public void setAppSecret(String appSecret) {
        this.appSecret = appSecret;
    }

    public String getIsFlag() {
        return isFlag;
    }

    public void setIsFlag(String isFlag) {
        this.isFlag = isFlag;
    }

    public String getAccessToken() {
        return accessToken;
    }

    public void setAccessToken(String accessToken) {
        this.accessToken = accessToken;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", appName=").append(appName);
        sb.append(", appId=").append(appId);
        sb.append(", appSecret=").append(appSecret);
        sb.append(", isFlag=").append(isFlag);
        sb.append(", accessToken=").append(accessToken);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        AppEntity other = (AppEntity) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getAppName() == null ? other.getAppName() == null : this.getAppName().equals(other.getAppName()))
            && (this.getAppId() == null ? other.getAppId() == null : this.getAppId().equals(other.getAppId()))
            && (this.getAppSecret() == null ? other.getAppSecret() == null : this.getAppSecret().equals(other.getAppSecret()))
            && (this.getIsFlag() == null ? other.getIsFlag() == null : this.getIsFlag().equals(other.getIsFlag()))
            && (this.getAccessToken() == null ? other.getAccessToken() == null : this.getAccessToken().equals(other.getAccessToken()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getAppName() == null) ? 0 : getAppName().hashCode());
        result = prime * result + ((getAppId() == null) ? 0 : getAppId().hashCode());
        result = prime * result + ((getAppSecret() == null) ? 0 : getAppSecret().hashCode());
        result = prime * result + ((getIsFlag() == null) ? 0 : getIsFlag().hashCode());
        result = prime * result + ((getAccessToken() == null) ? 0 : getAccessToken().hashCode());
        return result;
    }
}